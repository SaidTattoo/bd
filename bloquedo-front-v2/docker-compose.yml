version: '3.8'

services:
  # Servidor WebSocket central - Este será el único servidor que necesita ejecutarse en la máquina central
  websocket-server:
    build: 
      context: ./server
      dockerfile: Dockerfile
    container_name: sigma-socket-server
    ports:
      - "3003:3003"  # Exponer el puerto para que los totems puedan conectarse
    environment:
      - PORT=3003
      - HOST=0.0.0.0
      - ALLOWED_ORIGINS=*
      - STATE_SAVE_INTERVAL=30000  # Guardar estado cada 30 segundos
    volumes:
      - socket-data:/app/data  # Para persistencia de estado
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API (opcional - si se usa)
  api-server:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: api-server  
    ports:
      - "12091:12091"
    restart: always
    environment:
      - PORT=12091
      - WEBSOCKET_URL=http://websocket-server:3003

  # Proxy Inverso (Nginx) - para servir aplicación web y rutas
  reverse-proxy:
    image: nginx:alpine
    container_name: reverse-proxy
    ports:
      - "80:80"
      - "443:443"  # Si se usa HTTPS
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl  # Certificados SSL si son necesarios
    depends_on:
      - websocket-server
      - api-server
    restart: always

  # Aplicación web para los tótems
  totem-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: totem-app
    network_mode: "host"  # Usar red del host para mejor descubrimiento en LAN
    environment:
      - ENV_WEBSOCKET_URL=${SOCKET_SERVER_IP:-http://localhost:3003}
      - TOTEM_ID=${TOTEM_ID:-auto}
      - LOCATION_NAME=${LOCATION_NAME:-Default}
    volumes:
      - ./env-config.sh:/usr/share/nginx/html/env-config.sh
    depends_on:
      - websocket-server
    restart: always

volumes:
  socket-data:
    driver: local

# Red dedicada para la comunicación entre servicios
networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 

# Nota: Este docker-compose.yml debe ejecutarse en la máquina central/servidor
# Los totems individuales se configurarán para conectarse a la IP de este servidor
# Ejemplo de archivo .env para totems:
# SOCKET_SERVER_IP=192.168.1.100 (reemplazar con la IP real del servidor en la red local)